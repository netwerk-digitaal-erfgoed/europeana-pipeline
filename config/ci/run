#!/bin/bash
set -e
source ./config/ci/.env
MODE=${1}
if [ -z "${DESTINATION_DATASET}" ]; then
  echo "Environment variable DESTINATION_DATASET missing"
  exit 1;
fi
if [ "${MODE}" = "acceptance" ] || [ "${MODE}" = "production" ]; then
  CONTAINER_NAME="ci-edm-conversie-project-${MODE}"
  #remove other runs when needed. Otherwise, we'd have duplicate runs working on the same directory
  docker rm -f ${CONTAINER_NAME} 2> /dev/null || true
  echo "Running ETL"
  # docker run --rm \
  #   -v /scratch/edm-conversie-project-${MODE}:/home/triply/data \
  #   -e TRIPLYDB_TOKEN=${TRIPLYDB_TOKEN} \
  #   -e TRIPLYDB_ACCOUNT=${TRIPLYDB_ACCOUNT} \
  #   -e LOCAL_QUERY=${LOCAL_QUERY} \
  #   -e SOURCE_DATASET=${SOURCE_DATASET} \
  #   -e DESTINATION_DATASET=${DESTINATION_DATASET} \
  #   -e MODE=${MODE} \
  #   --name ${CONTAINER_NAME} \
  #   ${DOCKER_IMAGE_NAME}-etl:${DOCKER_IMAGE_TAG}
  echo "Running crawler"
  docker run --rm \
    -v /scratch/edm-conversie-project-${MODE}/:/data \
    -e MODE=${MODE} \
    --name ${CONTAINER_NAME} \
    ${DOCKER_IMAGE_NAME}-crawler:${DOCKER_IMAGE_TAG} \
    ls -lah .
    # ./rdf2edm.sh -input_file /data/${DESTINATION_DATASET}.ttl -output_file /data/${DESTINATION_DATASET}.xml.zip
  echo "Running ETL after hook"
  docker run --rm \
    -v /scratch/edm-conversie-project-${MODE}:/home/triply/data \
    -e TRIPLYDB_TOKEN=${TRIPLYDB_TOKEN} \
    -e TRIPLYDB_ACCOUNT=${TRIPLYDB_ACCOUNT} \
    -e DESTINATION_DATASET=${DESTINATION_DATASET} \
    -e MODE=${MODE} \
    --name ${CONTAINER_NAME} \
    ${DOCKER_IMAGE_NAME}-etl:${DOCKER_IMAGE_TAG} \
    yarn ratt ./lib/after.js
else
  echoerr "Expected ${MODE} to be 'production' or 'acceptance'"
  exit 1;
fi
